ููุฑู ุชุณุฌูู ุญุณุงุจ ูุน ุงูุชุญูู
๐ง ุงูุชูููุงุช ุงููุณุชุฎุฏูุฉ:
react-hook-form

ุชุญูู ูู:

ุงูุงุณู

ุงูุจุฑูุฏ ุงูุฅููุชุฑููู (ุจุตูุบุฉ ุตุญูุญุฉ)

ูููุฉ ุงููุฑูุฑ (ุจุทูู ููุงุณุจ)

ุชุฃููุฏ ูููุฉ ุงููุฑูุฑ

๐ฆ ุฃูููุง: ุชุซุจูุช ุงูููุชุจุฉ
ูู ูุง ุซุจุชุชุด ุงูููุชุจุฉ:

bash
Copy
Edit
npm install react-hook-form
๐งฉ ุงูููุฏ ุงููุงูู:
tsx
Copy
Edit
import React from "react";
import { useForm } from "react-hook-form";

export default function SignUpForm() {
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm();

  const onSubmit = (data) => {
    console.log("ุชู ุงูุชุณุฌูู ุจูุฌุงุญ:", data);
  };

  const password = watch("password");

  return (
    <form onSubmit={handleSubmit(onSubmit)} className="max-w-md mx-auto space-y-4 p-4 border rounded">
      {/* ุงูุงุณู */}
      <div>
        <label>ุงูุงุณู ุงููุงูู</label>
        <input
          {...register("fullName", {
            required: "ุงูุงุณู ูุทููุจ",
            minLength: { value: 3, message: "ุงูุงุณู ูุฌุจ ุฃู ูููู 3 ุฃุญุฑู ุนูู ุงูุฃูู" },
          })}
          className="w-full border p-2"
        />
        {errors.fullName && <p className="text-red-500">{errors.fullName.message}</p>}
      </div>

      {/* ุงูุจุฑูุฏ ุงูุฅููุชุฑููู */}
      <div>
        <label>ุงูุจุฑูุฏ ุงูุฅููุชุฑููู</label>
        <input
          {...register("email", {
            required: "ุงูุจุฑูุฏ ูุทููุจ",
            pattern: {
              value: /^[^@ ]+@[^@ ]+\.[^@ .]{2,}$/,
              message: "ุตูุบุฉ ุงูุจุฑูุฏ ุบูุฑ ุตุญูุญุฉ",
            },
          })}
          className="w-full border p-2"
        />
        {errors.email && <p className="text-red-500">{errors.email.message}</p>}
      </div>

      {/* ูููุฉ ุงููุฑูุฑ */}
      <div>
        <label>ูููุฉ ุงููุฑูุฑ</label>
        <input
          type="password"
          {...register("password", {
            required: "ูููุฉ ุงููุฑูุฑ ูุทููุจุฉ",
            minLength: { value: 6, message: "ูุฌุจ ุฃู ุชููู 6 ุฃุญุฑู ุนูู ุงูุฃูู" },
          })}
          className="w-full border p-2"
        />
        {errors.password && <p className="text-red-500">{errors.password.message}</p>}
      </div>

      {/* ุชุฃููุฏ ูููุฉ ุงููุฑูุฑ */}
      <div>
        <label>ุชุฃููุฏ ูููุฉ ุงููุฑูุฑ</label>
        <input
          type="password"
          {...register("confirmPassword", {
            required: "ุชุฃููุฏ ูููุฉ ุงููุฑูุฑ ูุทููุจ",
            validate: (value) => value === password || "ูููุฉ ุงููุฑูุฑ ุบูุฑ ูุชุทุงุจูุฉ",
          })}
          className="w-full border p-2"
        />
        {errors.confirmPassword && <p className="text-red-500">{errors.confirmPassword.message}</p>}
      </div>

      {/* ุฒุฑ ุงูุฅุฑุณุงู */}
      <button type="submit" className="bg-blue-600 text-white px-4 py-2 rounded">
        ุชุณุฌูู
      </button>
    </form>
  );
}
โ ูุงุฐุง ูุญุฏุซ ููุง:
  ุงูุฌุฒุก 	       ุงูุบุฑุถ   
register("fieldName", validationRules)	ุชุณุฌูู ุงูุญูู ูุฑุจุท ุงูุชุญูู
errors.fieldName	ุนุฑุถ ุฑุณุงูุฉ ุงูุฎุทุฃ ูู ููู
watch("password")	ููุฑุงูุจุฉ ูููุฉ ุงููุฑูุฑ ูููุงุฑูุชูุง ุจุงูุชุฃููุฏ

